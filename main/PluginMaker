local module = {
    me = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
}
local follow = false
local raid = false
local loaded = false
local actualmodule = {
	perfix = ';'	,
	blacklist = {}
}
print(actualmodule.perfix)
module.test = function(args)
	for i,v in pairs(args) do
		print("Arg "..i.." "..v)
	end
end
local function DoCommand(command,args)
	for i,v in pairs(module) do
		if string.lower(i) == string.lower(command) then
			v(args)

		end
	end
end
function module:SetPerfix(perfix)
    print(actualmodule.perfix)
    print("Set to "..perfix)
	actualmodule.perfix = perfix
end
function module:OnLoad(callback)
    spawn(function()
        while wait() do
		    if loaded == true then
			    callback()
			    break
		    end
	    end
    end)

end
function module:CreateCommand(commandName,callback)
    spawn(function()
        loaded = true
    end)

	module[commandName] = callback
end

local function GetFullChatCommand(msg)
	local splittedMsg = string.split(msg)

	local FinalMsg = " "
	--print('Message '..msg)
	if string.find(splittedMsg[1],actualmodule.perfix) ~= nil then
		FinalMsg = string.gsub(msg,actualmodule.perfix,'')
		splittedMsg = string.split(FinalMsg," ")
		--print("Is a command")
	else
		--print('not a command')
		return false
	end

	return splittedMsg
end
local function GetArgs(commtbl)
	local res = {}
	for i,v in pairs(commtbl) do
		if i == 1 then
			continue
		elseif v == "" then
			continue

		else
			res[i-1] = v
		end
	end
	return res
end
local function removeblacklist(name)

	for i,v in pairs(actualmodule.blacklist) do
		if v == name then
			table.remove(actualmodule.blacklist,i)
		end
	end
end
local function CheckPlayer(Name)
	for i,v in pairs(game.Players:GetPlayers()) do
		if string.lower(v.Name) == string.lower(Name) then
		    print(v)
			return v

		elseif string.find(string.lower(v.Name),string.lower(Name)) ~= nil then
		    print(v)
		    return v
		elseif string.lower(v.DisplayName) == string.lower(Name) then
		    print(v)
		    return v
		elseif string.find(string.lower(v.DisplayName),string.lower(Name)) ~= nil then
		    print(v)
		    return v
		else
		    continue
		end
	end
	return false
end
function module:CheckIfMeOrAll(args,argNumIndex)
    local plr
    if string.lower(args[argNumIndex]) == string.lower(game.Players.LocalPlayer.Name) then
		plr = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		print(plr)
	elseif string.lower(args[argNumIndex]) == string.lower("all") then
		plr = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		print(plr)
	else
	    plr = nil
	    print(plr)
	end
	print(plr)
	if plr == nil then
	    return false
	end
	print(plr)
	return plr
end
function module:CheckIfMeOrPlayer(args,argNumIndex)
    local plr
    if string.lower(args[argNumIndex]) == string.lower(game.Players.LocalPlayer.Name) then

		plr = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")

		print(plr)
	elseif CheckPlayer(args[argNumIndex]) then

		plr = CheckPlayer(args[argNumIndex]).Character:FindFirstChildOfClass('Humanoid')
		print(plr)
	else
	    print(plr)
	    plr = nil
	end
	print(plr)
	if plr == nil then
	    return false
	end
	print(plr)
	return plr
end
function module:GetPlayer(plrhumobj)
    local plr
    print(plr)
    if plrhumobj:IsA("Humanoid") then
        plr = game.Players:GetPlayerFromCharacter(plrhumobj.Parent)
        print(plr.Name)
    elseif game.Players:GetPlayerFromCharacter(plrhumobj) then
        plr = game.Players:GetPlayerFromCharacter(plrhumobj)

    end
    return plr
end
for i,v in pairs(game.Players:GetPlayers()) do
	if not table.find(actualmodule.blacklist,string.lower(v.Name)) then
		v.Chatted:Connect(function(msg)
			if table.find(actualmodule.blacklist,string.lower(v.Name)) then
				return
			else
				local commtbl = GetFullChatCommand(msg)
				if commtbl ~= false then
				    --print("Not false")
					if commtbl[1] then
					    --print("Commanddddd")
						local args = GetArgs(commtbl)
						DoCommand(commtbl[1],GetArgs(commtbl))
					end
				else
					--print('no perfix')
					return
				end

			end

		end)
	end
end

game.Players.PlayerAdded:Connect(function(plr)
	if not table.find(actualmodule.blacklist,string.lower(plr.Name)) then
		plr.Chatted:Connect(function(msg)
			if table.find(actualmodule.blacklist,string.lower(plr.Name)) then
				print('you are blacklisted')
				return
			else
				local commtbl = GetFullChatCommand(msg)
				if commtbl[1] then
				    --print("COMMAnDDD")
					local args = GetArgs(commtbl)
					DoCommand(commtbl[1],GetArgs(commtbl))
				end
			end
		end)
	else
	    print("Not blacklisted")
	end
end)
return module