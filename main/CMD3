local module= {}
local follow = false
local actualmodule = {
	perfix = ';'
}
module.test = function(args)
	for i,v in pairs(args) do
		print("Arg "..i.." "..v)
	end
end
local function DoCommand(command,args)
	for i,v in pairs(module) do
		if string.lower(i) == string.lower(command) then
			v(args)

		end
	end
end
local function CreateCommand(commandName,callback)
	module[commandName] = callback
end
local function GetFullChatCommand(msg)
	local splittedMsg = string.split(msg)

	local FinalMsg = " "
	if string.find(splittedMsg[1],actualmodule.perfix) ~= nil then
		FinalMsg = string.gsub(msg,actualmodule.perfix,'')
		splittedMsg = string.split(FinalMsg," ")
	end

	return splittedMsg
end
local function GetArgs(commtbl)
	local res = {}
	for i,v in pairs(commtbl) do
		if i == 1 then
			continue
		elseif v == "" then
			continue

		else
			res[i-1] = v
		end
	end
	return res
end
local function CheckPlayer(Name)
	for i,v in pairs(game.Players:GetPlayers()) do
		if string.lower(v.Name) == string.lower(Name) then
			return v
		end
	end
	return false
end
for i,v in pairs(game.Players:GetPlayers()) do
	if v then
		v.Chatted:Connect(function(msg)
			local commtbl = GetFullChatCommand(msg)
			if commtbl[1] then
				local args = GetArgs(commtbl)
				DoCommand(commtbl[1],GetArgs(commtbl))
			end
		end)
	end
end
game.Players.PlayerAdded:Connect(function(plr)
	if plr then
		plr.Chatted:Connect(function(msg)
			local commtbl = GetFullChatCommand(msg)
			if commtbl[1] then
				local args = GetArgs(commtbl)
				DoCommand(commtbl[1],GetArgs(commtbl))
			end
		end)
	end
end)

CreateCommand("hi",function()
	print("He said hi")
end)
CreateCommand("args",function(args)
	print("He gave args:")
	for i,v in pairs(args) do
		print('arg '..i.." "..v)
	end
end)
CreateCommand("say",function(args)
	wait(math.random(75,100)/350)
	local msg = ""
	for i,v in pairs(args) do
		if i == 1 then
			continue
		elseif msg == "" then

			msg = v

		else
			msg = msg.." "..v
		end
	end

	if string.lower(args[1]) == string.lower(game.Players.LocalPlayer.Name) then
		game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg,"all")
	elseif string.lower(args[1]) == "all" then

		game:GetService('ReplicatedStorage').DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg,"all")
	end
end)
CreateCommand("kill",function(args)
	wait(math.random(75,100)/350)
	if string.lower(args[1]) == string.lower(game.Players.LocalPlayer.Name) then
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = 0
	elseif string.lower(args[1]) == "all" then
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = 0
	end
end)
CreateCommand("sayrandom",function(args)
	wait(math.random(75,100)/350)
	local body = {
		"please give me ",
		'I want to ',
		'Do you have ',
		"I need to ",
		'I want ',
		'pls I need ',
		'Can you ',
		'give me ',
		'please send me ',
		'There are some ',
		'There is a ',
	}
	local msg = body[math.random(1,#body)]
	local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/x203f/RBXRandomWordGenerator/main/main/RBXGenerator",true))()
	local probs = {
		["length"] = tonumber(args[2]),
		["amount"] = tonumber(args[3]),
	}
	module.DebugMode = true
	local wordlol = module:GetRandomWords(probs)
	for i,word in pairs(wordlol) do
		msg = msg..word.." "
	end

	if string.lower(args[1]) == string.lower(game.Players.LocalPlayer.Name) then
		game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg,"all")
	elseif string.lower(args[1]) == "all" then

		game:GetService('ReplicatedStorage').DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg,"all")
	end
end)
CreateCommand("tp",function(args)
	local tpFrom
	local tpTo
	if string.lower(args[1]) == string.lower(game.Players.LocalPlayer.Name) then
		tpFrom = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RootPart
	else
		if CheckPlayer(args[1]) then
			tpFrom = CheckPlayer(args[1]).Character:FindFirstChildOfClass("Humanoid").RootPart
		end
	end
	if string.lower(args[2]) == string.lower(game.Players.LocalPlayer.Name) then
		tpTo = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RootPart
	else
		if CheckPlayer(args[2]) then
			tpTo = CheckPlayer(args[2]).Character:FindFirstChildOfClass("Humanoid").RootPart
		end
	end
	if tpFrom and tpTo then
		tpFrom.CFrame = tpTo.CFrame
	end

end)
CreateCommand("followpf",function(args)
	local tpFrom
	local tpTo
	if string.lower(args[1]) == string.lower(game.Players.LocalPlayer.Name) then
		tpFrom = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	else
		if CheckPlayer(args[1]) then
			tpFrom = CheckPlayer(args[1]).Character:FindFirstChildOfClass("Humanoid")
		end
	end
	if string.lower(args[2]) == string.lower(game.Players.LocalPlayer.Name) then
		tpTo = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	else
		if CheckPlayer(args[2]) then
			tpTo = CheckPlayer(args[2]).Character:FindFirstChildOfClass("Humanoid")
		end
	end
	print(tpFrom,tpTo)
	if tpFrom and tpTo then
		while wait() do
			if follow == true then
				local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/x203f/RBXPathFinder/main/main/PathFinder",true))()
				module.PlaceWayPoints = false
				module.WaitPerWaypoint = 0.035
				module.Humanoid = tpFrom
				print(module.Humanoid)
				module:Walk(tpTo.RootPart.Position)
				wait()
			else
				break
			end

		end
	end
end)
CreateCommand("follownopf",function(args)
	local tpTo
	follow = true
	if string.lower(args[1]) == string.lower(game.Players.LocalPlayer.Name) then
		tpTo = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	else
		if CheckPlayer(args[1]) then
			tpTo = CheckPlayer(args[1]).Character:FindFirstChildOfClass("Humanoid")
		end
	end
	if tpTo then
		while wait() do
			if follow == true then
				game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):MoveTo(tpTo.RootPart.Position)
				game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MoveToFinished:Wait(2)
			else
				break
			end

		end
	end

end)
CreateCommand("unfollow",function(args)
	follow = false

end)
print(module)